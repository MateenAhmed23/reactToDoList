{"version":3,"sources":["components/todoform.js","components/todo.js","components/todolist.js","components/app.js","index.js"],"names":["Todoform","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setedit","map","todo","index","isComplete","onClick","Todolist","settodos","test","newTodos","updatedTodos","removeArr","filter","ID","newValue","prev","item","App","Component","ReactDom","render","document","querySelector"],"mappings":"oOA4CeA,MA1Cf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAErB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAatB,OACG,sBAAMW,UAAU,YAAYC,SAXV,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAGV,SACKL,EAAME,KACN,qCACG,uBAAOoB,KAAK,OAAOC,YAAY,cAAcpB,MAAOC,EAAOoB,KAAK,OAAQV,UAAU,kBAAkBW,SAAUd,EAAce,IAAKpB,IAChI,wBAAQQ,UAAU,mBAAlB,0BAGA,qCACD,uBAAOQ,KAAK,OAAOC,YAAY,aAAapB,MAAOC,EAAOoB,KAAK,OAAQV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IAC1H,wBAAQQ,UAAU,cAAlB,4BCYDa,MAxCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAEjC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAJ8C,mBAElDD,EAFkD,KAE5C8B,EAF4C,KAezD,OAAG9B,EAAKe,GACG,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQAyB,EAAMK,KAAI,SAACC,EAAKC,GAC3B,OAAO,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UACH,qBAAmBC,QAAS,kBAAKR,EAAaK,EAAKjB,KAAnD,SACKiB,EAAKb,MADAa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACIuB,QAAS,WAAMP,EAAWI,EAAKjB,KAC/BH,UAAU,gBAEd,cAAC,IAAD,CACIuB,QAAS,kBAAKL,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QACjDP,UAAU,mBAX0DqB,OCiCzEG,MAvDf,WAAqB,IAAD,EAEUrC,mBAAS,IAFnB,mBAET2B,EAFS,KAEFW,EAFE,KAyChB,OACI,gCACI,8DACA,cAAC,EAAD,CAAUxB,SAvCF,SAAAmB,GAEZ,GAAIA,EAAKb,OAAQ,OAAOmB,KAAKN,EAAKb,MAAlC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OAgCL,cAAC,EAAD,CACIb,MAASA,EACTC,aAhBS,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAKzB,OAJGA,EAAKjB,KAAOA,IAEXiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IASDZ,WAvBO,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAMA,KAEvDsB,EAASI,IAqBDZ,WAjCO,SAACc,EAAGC,GACfA,EAASzB,OAAQ,OAAOmB,KAAKM,EAASzB,OAK1CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAAKC,EAAWE,eCXxDC,G,6KARP,OACA,qBAAKnC,UAAU,WAAf,SACI,cAAC,EAAD,U,GAJMoC,cCDlBC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.53479bb9.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction Todoform(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    })\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n   }\r\n    return (\r\n       <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n           {props.edit ? (\r\n            <>\r\n               <input type=\"text\" placeholder=\"Edit a Todo\" value={input} name=\"text\"  className=\"todo-input edit\" onChange={handleChange} ref={inputRef}/>\r\n                <button className=\"todo-button edit\">Edit Todo</button>\r\n            </>\r\n            ) : (\r\n                <>\r\n               <input type=\"text\" placeholder=\"Add a TODO\" value={input} name=\"text\"  className=\"todo-input\" onChange={handleChange} ref={inputRef}/>\r\n                <button className=\"todo-button\">Add Todo</button>\r\n            </>\r\n            )\r\n           }\r\n           \r\n\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default Todoform\r\n","import React, {useState} from 'react'\r\n\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\nimport Todoform from './todoform';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\r\n    const [edit, setedit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value);\r\n        setedit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if(edit.id) {\r\n        return <Todoform edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    let newTodos = todos.map((todo,index)=>{\r\n        return <div className={todo.isComplete ? \"todo-row complete\" : 'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={()=> completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine \r\n                    onClick={()=>{ removeTodo(todo.id)}}\r\n                    className=\"delete-icon\"\r\n                />\r\n                <TiEdit \r\n                    onClick={()=> setedit({ id: todo.id, value: todo.text})}\r\n                    className=\"edit-icon\"\r\n                />\r\n            </div>\r\n        </div>\r\n    });\r\n\r\n    return newTodos;\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react'\r\nimport Todo from './todo';\r\nimport Todoform from './todoform';\r\n\r\nfunction Todolist() {\r\n\r\n    const [todos, settodos] = useState([]);\r\n\r\n\r\n    const addTodo = todo => {\r\n\r\n        if(!todo.text || /^\\s$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        settodos(newTodos);\r\n    }\r\n\r\n    const updateTodo = (ID,newValue) => {\r\n        if(!newValue.text || /^\\s$/.test(newValue.text))\r\n        {\r\n            return;\r\n        }\r\n\r\n        settodos(prev => prev.map(item => (item.id === ID ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !==id)\r\n\r\n        settodos(removeArr);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id === id)\r\n            {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        })\r\n        settodos(updatedTodos);\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>What is your plan for today?</h1>\r\n            <Todoform onSubmit={addTodo}/>\r\n            <Todo \r\n                todos = {todos}\r\n                completeTodo = {completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist;\r\n","import React, {Component} from 'react'\r\nimport Todolist from './todolist';\r\n\r\nimport \"../css/app.css\"\r\n\r\nclass App extends Component{\r\n    render(){\r\n        return(\r\n        <div className='todo-app'>\r\n            <Todolist />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\n\r\nimport App from './components/app';\r\nReactDom.render(\r\n    <App/>,\r\n    document.querySelector('#root')\r\n)"],"sourceRoot":""}